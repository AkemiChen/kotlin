FILE: illegalActionProvide.kt
    public final infix fun R|kotlin/Any|.mustDo(action: R|kotlin/Any|): R|kotlin/Unit| {
    }
    public final fun initializationOf(target: R|kotlin/Any|, property: R|kotlin/Any|, kind: R|kotlin/contracts/InvocationKind|): R|kotlin/Any| {
        ^initializationOf R|<local>/target|
    }
    public final fun initializes(property: R|kotlin/Any|, kind: R|kotlin/contracts/InvocationKind|): R|kotlin/Unit| {
    }
    public final fun invocationOf(target: R|kotlin/Any|, function: R|kotlin/Any|, kind: R|kotlin/contracts/InvocationKind|): R|kotlin/Any| {
        ^invocationOf R|<local>/target|
    }
    public final fun invokes(function: R|kotlin/Any|, kind: R|kotlin/contracts/InvocationKind|): R|kotlin/Unit| {
    }
    public final fun receiverOf(lambda: R|kotlin/Any|): R|kotlin/Any| {
        ^receiverOf R|<local>/lambda|
    }
    @R|kotlin/annotation/Target|(vararg(Q|kotlin/annotation/AnnotationTarget|.R|kotlin/annotation/AnnotationTarget.CLASS|)) @R|kotlin/annotation/Retention|(Q|kotlin/annotation/AnnotationRetention|.R|kotlin/annotation/AnnotationRetention.SOURCE|) public final annotation class SafeBuilder : R|kotlin/Annotation| {
        public constructor(): R|SafeBuilder| {
            super<R|kotlin/Any|>()
        }

    }
    @R|kotlin/annotation/Target|(vararg(Q|kotlin/annotation/AnnotationTarget|.R|kotlin/annotation/AnnotationTarget.FUNCTION|)) @R|kotlin/annotation/Retention|(Q|kotlin/annotation/AnnotationRetention|.R|kotlin/annotation/AnnotationRetention.SOURCE|) public final annotation class NotConstruction : R|kotlin/Annotation| {
        public constructor(): R|NotConstruction| {
            super<R|kotlin/Any|>()
        }

    }
    @R|kotlin/annotation/Target|(vararg(Q|kotlin/annotation/AnnotationTarget|.R|kotlin/annotation/AnnotationTarget.FUNCTION|)) @R|kotlin/annotation/Retention|(Q|kotlin/annotation/AnnotationRetention|.R|kotlin/annotation/AnnotationRetention.SOURCE|) public final annotation class Build : R|kotlin/Annotation| {
        public constructor(): R|Build| {
            super<R|kotlin/Any|>()
        }

    }
    @R|SafeBuilder|() public final class Builder : R|kotlin/Any| {
        public constructor(): R|Builder| {
            super<R|kotlin/Any|>()
        }

        public final fun a(): R|kotlin/Unit| {
        }

        @R|Build|() public final fun build(): R|kotlin/Unit| {
        }

    }
    public final fun R|Builder|.myA(): R|kotlin/Unit|
        [R|Contract description]
         <
            provides invocationOf(this, a, EXACTLY_ONCE)
        >
     {
        [StubStatement]
        this@R|/myA|.R|/Builder.a|()
    }
    public final fun R|Builder|.myA0(): R|kotlin/Unit|
        [R|Contract description]
         <
            provides invocationOf(this, a, EXACTLY_ONCE)
        >
     {
        [StubStatement]
    }
    public final fun R|Builder|.myA1(): R|kotlin/Unit|
        [R|Contract description]
         <
            provides invocationOf(this, a, EXACTLY_ONCE)
        >
     {
        [StubStatement]
        when () {
            Boolean(true) ->  {
                this@R|/myA1|.R|/Builder.a|()
            }
        }

    }
    public final fun R|Builder|.myA2(): R|kotlin/Unit|
        [R|Contract description]
         <
            provides invocationOf(this, a, EXACTLY_ONCE)
        >
     {
        [StubStatement]
        when () {
            Boolean(true) ->  {
                this@R|/myA2|.R|/Builder.a|()
            }
            else ->  {
                this@R|/myA2|.R|/myA|()
            }
        }

    }
    public final fun test(): R|kotlin/Unit| {
        lval builder: R|Builder| = R|/Builder.Builder|()
        R|<local>/builder|.R|/myA|()
        R|<local>/builder|.R|/Builder.build|()
    }
